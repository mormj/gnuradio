

/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#ifndef INCLUDED_GR_FILTER_FFT_FILTER_CCF_PYTHON_HPP
#define INCLUDED_GR_FILTER_FFT_FILTER_CCF_PYTHON_HPP

#include <gnuradio/filter/fft_filter_ccf.h>

void bind_fft_filter_ccf(py::module& m)
{
    using fft_filter_ccf    = gr::filter::fft_filter_ccf;


    py::class_<fft_filter_ccf,gr::sync_decimator,
        std::shared_ptr<fft_filter_ccf>>(m, "fft_filter_ccf")

        .def(py::init(&fft_filter_ccf::make),
           py::arg("decimation"), 
           py::arg("taps"), 
           py::arg("nthreads") = 1 
        )
        

        .def("set_taps",&fft_filter_ccf::set_taps,
            py::arg("taps") 
        )
        .def("taps",&fft_filter_ccf::taps)
        .def("set_nthreads",&fft_filter_ccf::set_nthreads,
            py::arg("n") 
        )
        .def("nthreads",&fft_filter_ccf::nthreads)
        .def("to_basic_block",[](std::shared_ptr<fft_filter_ccf> p){
            return p->to_basic_block();
        })
        ;


} 

#endif /* INCLUDED_GR_FILTER_FFT_FILTER_CCF_PYTHON_HPP */
