/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/filter/pfb_decimator_ccf.h>

void bind_pfb_decimator_ccf(py::module& m)
{
    using pfb_decimator_ccf    = gr::filter::pfb_decimator_ccf;


    py::class_<pfb_decimator_ccf,gr::sync_block,
        std::shared_ptr<pfb_decimator_ccf>>(m, "pfb_decimator_ccf")

        .def(py::init(&pfb_decimator_ccf::make),
           py::arg("decim"), 
           py::arg("taps"), 
           py::arg("channel"), 
           py::arg("use_fft_rotator") = true, 
           py::arg("use_fft_filters") = true 
        )
        

        .def("set_taps",&pfb_decimator_ccf::set_taps,
            py::arg("taps") 
        )
        .def("taps",&pfb_decimator_ccf::taps)
        .def("print_taps",&pfb_decimator_ccf::print_taps)
        .def("set_channel",&pfb_decimator_ccf::set_channel,
            py::arg("channel") 
        )
        .def("to_basic_block",[](std::shared_ptr<pfb_decimator_ccf> p){
            return p->to_basic_block();
        })
        ;


} 
