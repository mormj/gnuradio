/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/analog/agc_cc.h>

void bind_agc_cc(py::module& m)
{
    using agc_cc    = gr::analog::agc_cc;


    py::class_<agc_cc,gr::sync_block,
        std::shared_ptr<agc_cc>>(m, "agc_cc")

        .def(py::init(&agc_cc::make),
           py::arg("rate") = 1.0E-4, 
           py::arg("reference") = 1., 
           py::arg("gain") = 1. 
        )
        

        .def("rate",&agc_cc::rate)
        .def("reference",&agc_cc::reference)
        .def("gain",&agc_cc::gain)
        .def("max_gain",&agc_cc::max_gain)
        .def("set_rate",&agc_cc::set_rate,
            py::arg("rate") 
        )
        .def("set_reference",&agc_cc::set_reference,
            py::arg("reference") 
        )
        .def("set_gain",&agc_cc::set_gain,
            py::arg("gain") 
        )
        .def("set_max_gain",&agc_cc::set_max_gain,
            py::arg("max_gain") 
        )
        .def("to_basic_block",[](std::shared_ptr<agc_cc> p){
            return p->to_basic_block();
        })
        ;


} 
