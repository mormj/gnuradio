/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/analog/pll_carriertracking_cc.h>

void bind_pll_carriertracking_cc(py::module& m)
{
    using pll_carriertracking_cc    = gr::analog::pll_carriertracking_cc;


    py::class_<pll_carriertracking_cc,gr::sync_block,
        std::shared_ptr<pll_carriertracking_cc>>(m, "pll_carriertracking_cc")

        .def(py::init(&pll_carriertracking_cc::make),
           py::arg("loop_bw"), 
           py::arg("max_freq"), 
           py::arg("min_freq") 
        )
        

        .def("lock_detector",&pll_carriertracking_cc::lock_detector)
        .def("squelch_enable",&pll_carriertracking_cc::squelch_enable,
            py::arg("arg0") 
        )
        .def("set_lock_threshold",&pll_carriertracking_cc::set_lock_threshold,
            py::arg("arg0") 
        )
        .def("set_loop_bandwidth",&pll_carriertracking_cc::set_loop_bandwidth,
            py::arg("bw") 
        )
        .def("set_damping_factor",&pll_carriertracking_cc::set_damping_factor,
            py::arg("df") 
        )
        .def("set_alpha",&pll_carriertracking_cc::set_alpha,
            py::arg("alpha") 
        )
        .def("set_beta",&pll_carriertracking_cc::set_beta,
            py::arg("beta") 
        )
        .def("set_frequency",&pll_carriertracking_cc::set_frequency,
            py::arg("freq") 
        )
        .def("set_phase",&pll_carriertracking_cc::set_phase,
            py::arg("phase") 
        )
        .def("set_min_freq",&pll_carriertracking_cc::set_min_freq,
            py::arg("freq") 
        )
        .def("set_max_freq",&pll_carriertracking_cc::set_max_freq,
            py::arg("freq") 
        )
        .def("get_loop_bandwidth",&pll_carriertracking_cc::get_loop_bandwidth)
        .def("get_damping_factor",&pll_carriertracking_cc::get_damping_factor)
        .def("get_alpha",&pll_carriertracking_cc::get_alpha)
        .def("get_beta",&pll_carriertracking_cc::get_beta)
        .def("get_frequency",&pll_carriertracking_cc::get_frequency)
        .def("get_phase",&pll_carriertracking_cc::get_phase)
        .def("get_min_freq",&pll_carriertracking_cc::get_min_freq)
        .def("get_max_freq",&pll_carriertracking_cc::get_max_freq)
        .def("to_basic_block",[](std::shared_ptr<pll_carriertracking_cc> p){
            return p->to_basic_block();
        })
        ;


} 
