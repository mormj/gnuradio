/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/fec/tagged_encoder.h>

void bind_tagged_encoder(py::module& m)
{
    using tagged_encoder    = gr::fec::tagged_encoder;


    py::class_<tagged_encoder,gr::tagged_stream_block,
        std::shared_ptr<tagged_encoder>>(m, "tagged_encoder")

        .def(py::init(&tagged_encoder::make),
           py::arg("my_encoder"), 
           py::arg("input_item_size"), 
           py::arg("output_item_size"), 
           py::arg("lengthtagname") = "packet_len", 
           py::arg("mtu") = 1500 
        )
        

        .def("work",&tagged_encoder::work,
            py::arg("noutput_items"), 
            py::arg("ninput_items"), 
            py::arg("input_items"), 
            py::arg("output_items") 
        )
        .def("calculate_output_stream_length",&tagged_encoder::calculate_output_stream_length,
            py::arg("ninput_items") 
        )
        .def("to_basic_block",[](std::shared_ptr<tagged_encoder> p){
            return p->to_basic_block();
        })
        ;


} 
