/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/fec/generic_decoder.h>

void bind_generic_decoder(py::module& m)
{
    using generic_decoder    = gr::fec::generic_decoder;


    py::class_<generic_decoder,
        std::shared_ptr<generic_decoder>>(m, "generic_decoder")

        .def("generic_work",&generic_decoder::generic_work,
            py::arg("inbuffer"), 
            py::arg("outbuffer") 
        )
        .def("unique_id",&generic_decoder::unique_id)
        .def("alias",&generic_decoder::alias)
        .def("rate",&generic_decoder::rate)
        .def("get_input_size",&generic_decoder::get_input_size)
        .def("get_output_size",&generic_decoder::get_output_size)
        .def("get_history",&generic_decoder::get_history)
        .def("get_shift",&generic_decoder::get_shift)
        .def("get_input_item_size",&generic_decoder::get_input_item_size)
        .def("get_output_item_size",&generic_decoder::get_output_item_size)
        .def("get_input_conversion",&generic_decoder::get_input_conversion)
        .def("get_output_conversion",&generic_decoder::get_output_conversion)
        .def("set_frame_size",&generic_decoder::set_frame_size,
            py::arg("frame_size") 
        )
        .def("get_iterations",&generic_decoder::get_iterations)
        ;


    m.def("get_decoder_output_size",&gr::fec::get_decoder_output_size,
        py::arg("my_decoder") 
    );
    m.def("get_decoder_input_size",&gr::fec::get_decoder_input_size,
        py::arg("my_decoder") 
    );
    m.def("get_shift",&gr::fec::get_shift,
        py::arg("my_decoder") 
    );
    m.def("get_history",&gr::fec::get_history,
        py::arg("my_decoder") 
    );
    m.def("get_decoder_input_item_size",&gr::fec::get_decoder_input_item_size,
        py::arg("my_decoder") 
    );
    m.def("get_decoder_output_item_size",&gr::fec::get_decoder_output_item_size,
        py::arg("my_decoder") 
    );
    m.def("get_decoder_input_conversion",&gr::fec::get_decoder_input_conversion,
        py::arg("my_decoder") 
    );
    m.def("get_decoder_output_conversion",&gr::fec::get_decoder_output_conversion,
        py::arg("my_decoder") 
    );
} 
