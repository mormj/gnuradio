/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/fec/fec_mtrx.h>

void bind_fec_mtrx(py::module& m)
{
    using block_data    = gr::fec::code::block_data;
    using matrix    = gr::fec::code::matrix;
    using fec_mtrx    = gr::fec::code::fec_mtrx;


    py::class_<block_data,
        std::shared_ptr<block_data>>(m, "block_data")
        ;


    py::class_<matrix,
        std::shared_ptr<matrix>>(m, "matrix")
        ;


    py::class_<fec_mtrx,
        std::shared_ptr<fec_mtrx>>(m, "fec_mtrx")
        .def("encode",&fec_mtrx::encode,
            py::arg("outbuffer"), 
            py::arg("inbuffer") 
        )
        .def("decode",&fec_mtrx::decode,
            py::arg("outbuffer"), 
            py::arg("inbuffer"), 
            py::arg("frame_size"), 
            py::arg("max_iterations") 
        )
        .def("n",&fec_mtrx::n)
        .def("k",&fec_mtrx::k)
        ;


    m.def("matrix_free",&gr::fec::code::matrix_free,
        py::arg("x") 
    );
    m.def("read_matrix_from_file",&gr::fec::code::read_matrix_from_file,
        py::arg("filename") 
    );
    m.def("write_matrix_to_file",&gr::fec::code::write_matrix_to_file,
        py::arg("filename"), 
        py::arg("M") 
    );
    m.def("generate_G_transpose",&gr::fec::code::generate_G_transpose,
        py::arg("H_obj") 
    );
    m.def("generate_G",&gr::fec::code::generate_G,
        py::arg("H_obj") 
    );
    m.def("generate_H",&gr::fec::code::generate_H,
        py::arg("G_obj") 
    );
    m.def("print_matrix",&gr::fec::code::print_matrix,
        py::arg("M"), 
        py::arg("numpy") = false 
    );
} 
