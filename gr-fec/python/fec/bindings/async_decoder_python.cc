/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/fec/async_decoder.h>

void bind_async_decoder(py::module& m)
{
    using async_decoder    = gr::fec::async_decoder;


    py::class_<async_decoder,gr::block,
        std::shared_ptr<async_decoder>>(m, "async_decoder")

        .def(py::init(&async_decoder::make),
           py::arg("my_decoder"), 
           py::arg("packed") = false, 
           py::arg("rev_pack") = true, 
           py::arg("mtu") = 1500 
        )
        

        .def("general_work",&async_decoder::general_work,
            py::arg("noutput_items"), 
            py::arg("ninput_items"), 
            py::arg("input_items"), 
            py::arg("output_items") 
        )
        .def("to_basic_block",[](std::shared_ptr<async_decoder> p){
            return p->to_basic_block();
        })
        ;


} 
