/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/fec/viterbi.h>

void bind_viterbi(py::module& m)
{
    using viterbi_state    = gr::fec::viterbi_state;


    py::class_<viterbi_state,
        std::shared_ptr<viterbi_state>>(m, "viterbi_state")

        .def(py::init<>())
        .def(py::init<gr::fec::viterbi_state const &>(),           py::arg("arg0") 
        )

        .def("to_basic_block",[](std::shared_ptr<viterbi> p){
            return p->to_basic_block();
        })
        ;


    m.def("gen_met",&gr::fec::gen_met,
        py::arg("mettab"), 
        py::arg("amp"), 
        py::arg("esn0"), 
        py::arg("bias"), 
        py::arg("scale") 
    );
    m.def("encode",&gr::fec::encode,
        py::arg("symbols"), 
        py::arg("data"), 
        py::arg("nbytes"), 
        py::arg("encstate") 
    );
    m.def("viterbi_chunks_init",&gr::fec::viterbi_chunks_init,
        py::arg("state") 
    );
    m.def("viterbi_butterfly2",&gr::fec::viterbi_butterfly2,
        py::arg("symbols"), 
        py::arg("mettab"), 
        py::arg("state0"), 
        py::arg("state1") 
    );
    m.def("viterbi_get_output",&gr::fec::viterbi_get_output,
        py::arg("state"), 
        py::arg("outbuf") 
    );
} 
