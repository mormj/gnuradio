/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/fec/ldpc_decoder.h>

void bind_ldpc_decoder(py::module& m)
{
    using ldpc_decoder    = gr::fec::ldpc_decoder;


    py::class_<ldpc_decoder,gr::fec::generic_decoder,
        std::shared_ptr<ldpc_decoder>>(m, "ldpc_decoder")

        // .def(py::init(&ldpc_decoder::make),
        //    py::arg("alist_file"), 
        //    py::arg("sigma") = 0.5, 
        //    py::arg("max_iterations") = 50 
        // )
        .def_static("make",&ldpc_decoder::make,
           py::arg("alist_file"), 
           py::arg("sigma") = 0.5, 
           py::arg("max_iterations") = 50 
        )

        .def("rate",&ldpc_decoder::rate)
        .def("set_frame_size",&ldpc_decoder::set_frame_size,
            py::arg("frame_size") 
        )
        .def("get_output_size",&ldpc_decoder::get_output_size)
        .def("get_input_size",&ldpc_decoder::get_input_size)
        .def("get_input_item_size",&ldpc_decoder::get_input_item_size)
        .def("get_output_item_size",&ldpc_decoder::get_output_item_size)
        .def("get_iterations",&ldpc_decoder::get_iterations)
        ;


} 
