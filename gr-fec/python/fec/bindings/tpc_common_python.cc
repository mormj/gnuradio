/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/fec/tpc_common.h>

void bind_tpc_common(py::module& m)
{
    using tpc_common    = gr::fec::tpc_common;


    py::class_<tpc_common,
        std::shared_ptr<tpc_common>>(m, "tpc_common")

        .def_static("parity_counter",&tpc_common::parity_counter,
            py::arg("symbol"), 
            py::arg("length") 
        )
        .def_static("rsc_enc_bit",&tpc_common::rsc_enc_bit,
            py::arg("input"), 
            py::arg("state_in"), 
            py::arg("g"), 
            py::arg("KK"), 
            py::arg("nn"), 
            py::arg("output"), 
            py::arg("nextStates") 
        )
        .def_static("precomputeStateTransitionMatrix_RSCPoly",&tpc_common::precomputeStateTransitionMatrix_RSCPoly,
            py::arg("numStates"), 
            py::arg("g"), 
            py::arg("KK"), 
            py::arg("nn"), 
            py::arg("output"), 
            py::arg("nextStates") 
        )
        .def_static("rsc_tail",&tpc_common::rsc_tail,
            py::arg("tail_p"), 
            py::arg("g"), 
            py::arg("max_states"), 
            py::arg("mm") 
        )
        .def_static("itob",&tpc_common::itob,
            py::arg("binVec"), 
            py::arg("symbol"), 
            py::arg("length") 
        )
        ;


} 
