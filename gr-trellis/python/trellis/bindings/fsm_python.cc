/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/trellis/fsm.h>

void bind_fsm(py::module& m)
{
    using fsm    = gr::trellis::fsm;


    py::class_<fsm,
        std::shared_ptr<fsm>>(m, "fsm")

        .def(py::init<>())
        .def(py::init<gr::trellis::fsm const &>(),           py::arg("FSM") 
        )
        .def(py::init<int,int,int,std::vector<int, std::allocator<int> > const &,std::vector<int, std::allocator<int> > const &>(),           py::arg("I"), 
           py::arg("S"), 
           py::arg("O"), 
           py::arg("NS"), 
           py::arg("OS") 
        )
        .def(py::init<char const *>(),           py::arg("name") 
        )
        .def(py::init<int,int,std::vector<int, std::allocator<int> > const &>(),           py::arg("k"), 
           py::arg("n"), 
           py::arg("G") 
        )
        .def(py::init<int,int>(),           py::arg("mod_size"), 
           py::arg("ch_length") 
        )
        .def(py::init<int,int,int>(),           py::arg("P"), 
           py::arg("M"), 
           py::arg("L") 
        )
        .def(py::init<gr::trellis::fsm const &,gr::trellis::fsm const &>(),           py::arg("FSM1"), 
           py::arg("FSM2") 
        )
        .def(py::init<gr::trellis::fsm const &,gr::trellis::fsm const &,bool>(),           py::arg("FSMo"), 
           py::arg("FSMi"), 
           py::arg("serial") 
        )
        .def(py::init<gr::trellis::fsm const &,int>(),           py::arg("FSM"), 
           py::arg("n") 
        )

        .def("I",&fsm::I)
        .def("S",&fsm::S)
        .def("O",&fsm::O)
        .def("NS",&fsm::NS)
        .def("OS",&fsm::OS)
        .def("PS",&fsm::PS)
        .def("PI",&fsm::PI)
        .def("TMi",&fsm::TMi)
        .def("TMl",&fsm::TMl)
        .def("write_trellis_svg",&fsm::write_trellis_svg,
            py::arg("filename"), 
            py::arg("number_stages") 
        )
        .def("write_fsm_txt",&fsm::write_fsm_txt,
            py::arg("filename") 
        )
        ;


} 
