/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/trellis/interleaver.h>

void bind_interleaver(py::module& m)
{
    using interleaver    = gr::trellis::interleaver;


    py::class_<interleaver,
        std::shared_ptr<interleaver>>(m, "interleaver")

        .def(py::init<>())
        .def(py::init<gr::trellis::interleaver const &>(),           py::arg("INTERLEAVER") 
        )
        .def(py::init<unsigned int,std::vector<int, std::allocator<int> > const &>(),           py::arg("K"), 
           py::arg("INTER") 
        )
        .def(py::init<char const *>(),           py::arg("name") 
        )
        .def(py::init<unsigned int,int>(),           py::arg("K"), 
           py::arg("seed") 
        )

        .def("K",&interleaver::K)
        .def("INTER",&interleaver::INTER)
        .def("DEINTER",&interleaver::DEINTER)
        .def("write_interleaver_txt",&interleaver::write_interleaver_txt,
            py::arg("filename") 
        )
        ;


} 
