/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/fxpt_nco.h>

void bind_fxpt_nco(py::module& m)
{
    using fxpt_nco    = gr::fxpt_nco;


    py::class_<fxpt_nco,
        std::shared_ptr<fxpt_nco>>(m, "fxpt_nco")

        .def(py::init<>())
        .def(py::init<gr::fxpt_nco const &>(),           py::arg("arg0") 
        )

        .def("set_phase",&fxpt_nco::set_phase,
            py::arg("angle") 
        )
        .def("adjust_phase",&fxpt_nco::adjust_phase,
            py::arg("delta_phase") 
        )
        .def("set_freq",&fxpt_nco::set_freq,
            py::arg("angle_rate") 
        )
        .def("adjust_freq",&fxpt_nco::adjust_freq,
            py::arg("delta_angle_rate") 
        )
        .def("step",(void (fxpt_nco::*)())&fxpt_nco::step)
        .def("step",(void (fxpt_nco::*)(int))&fxpt_nco::step,
            py::arg("n") 
        )
        .def("get_phase",&fxpt_nco::get_phase)
        .def("get_freq",&fxpt_nco::get_freq)
        .def("sincos",(void (fxpt_nco::*)(float *, float *) const)&fxpt_nco::sincos,
            py::arg("sinx"), 
            py::arg("cosx") 
        )
        .def("sincos",(void (fxpt_nco::*)(gr_complex *, int, double))&fxpt_nco::sincos,
            py::arg("output"), 
            py::arg("noutput_items"), 
            py::arg("ampl") = 1. 
        )
        .def("sin",(void (fxpt_nco::*)(float *, int, double))&fxpt_nco::sin,
            py::arg("output"), 
            py::arg("noutput_items"), 
            py::arg("ampl") = 1. 
        )
        .def("cos",(void (fxpt_nco::*)(float *, int, double))&fxpt_nco::cos,
            py::arg("output"), 
            py::arg("noutput_items"), 
            py::arg("ampl") = 1. 
        )
        .def("sin",(void (fxpt_nco::*)(int8_t *, int, double))&fxpt_nco::sin,
            py::arg("output"), 
            py::arg("noutput_items"), 
            py::arg("ampl") = 1. 
        )
        .def("cos",(void (fxpt_nco::*)(int8_t *, int, double))&fxpt_nco::cos,
            py::arg("output"), 
            py::arg("noutput_items"), 
            py::arg("ampl") = 1. 
        )
        .def("sin",(void (fxpt_nco::*)(short int *, int, double))&fxpt_nco::sin,
            py::arg("output"), 
            py::arg("noutput_items"), 
            py::arg("ampl") = 1. 
        )
        .def("cos",(void (fxpt_nco::*)(short int *, int, double))&fxpt_nco::cos,
            py::arg("output"), 
            py::arg("noutput_items"), 
            py::arg("ampl") = 1. 
        )
        .def("sin",(void (fxpt_nco::*)(int *, int, double))&fxpt_nco::sin,
            py::arg("output"), 
            py::arg("noutput_items"), 
            py::arg("ampl") = 1. 
        )
        .def("cos",(void (fxpt_nco::*)(int *, int, double))&fxpt_nco::cos,
            py::arg("output"), 
            py::arg("noutput_items"), 
            py::arg("ampl") = 1. 
        )
        .def("cos",(float (fxpt_nco::*)() const)&fxpt_nco::cos)
        .def("sin",(float (fxpt_nco::*)() const)&fxpt_nco::sin)
        ;


} 
