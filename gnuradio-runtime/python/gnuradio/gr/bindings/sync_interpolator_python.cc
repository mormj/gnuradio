/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/sync_interpolator.h>

void bind_sync_interpolator(py::module& m)
{
    using sync_interpolator    = gr::sync_interpolator;


    py::class_<sync_interpolator,gr::sync_block,
        std::shared_ptr<sync_interpolator>>(m, "sync_interpolator")


        .def("interpolation",&sync_interpolator::interpolation)
        .def("set_interpolation",&sync_interpolator::set_interpolation,
            py::arg("interpolation") 
        )
        .def("forecast",&sync_interpolator::forecast,
            py::arg("noutput_items"), 
            py::arg("ninput_items_required") 
        )
        .def("general_work",&sync_interpolator::general_work,
            py::arg("noutput_items"), 
            py::arg("ninput_items"), 
            py::arg("input_items"), 
            py::arg("output_items") 
        )
        .def("fixed_rate_ninput_to_noutput",&sync_interpolator::fixed_rate_ninput_to_noutput,
            py::arg("ninput") 
        )
        .def("fixed_rate_noutput_to_ninput",&sync_interpolator::fixed_rate_noutput_to_ninput,
            py::arg("noutput") 
        )
        .def("to_basic_block",[](std::shared_ptr<sync_interpolator> p){
            return p->to_basic_block();
        })
        ;


} 
