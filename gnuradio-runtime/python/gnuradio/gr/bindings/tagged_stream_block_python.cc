/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/tagged_stream_block.h>

void bind_tagged_stream_block(py::module& m)
{
    using tagged_stream_block    = gr::tagged_stream_block;


    py::class_<tagged_stream_block,gr::block,
        std::shared_ptr<tagged_stream_block>>(m, "tagged_stream_block")


        .def("forecast",&tagged_stream_block::forecast,
            py::arg("noutput_items"), 
            py::arg("ninput_items_required") 
        )
        .def("check_topology",&tagged_stream_block::check_topology,
            py::arg("ninputs"), 
            py::arg("arg1") 
        )
        .def("general_work",&tagged_stream_block::general_work,
            py::arg("noutput_items"), 
            py::arg("ninput_items"), 
            py::arg("input_items"), 
            py::arg("output_items") 
        )
        .def("work",&tagged_stream_block::work,
            py::arg("noutput_items"), 
            py::arg("ninput_items"), 
            py::arg("input_items"), 
            py::arg("output_items") 
        )
        .def("to_basic_block",[](std::shared_ptr<tagged_stream_block> p){
            return p->to_basic_block();
        })
        ;


} 
