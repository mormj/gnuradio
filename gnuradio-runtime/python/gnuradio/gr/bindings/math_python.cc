/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/math.h>

void bind_math(py::module& m)
{


    m.def("is_power_of_2",&gr::is_power_of_2,
        py::arg("x") 
    );
    m.def("fast_atan2f",(float (*)(float, float))&gr::fast_atan2f,
        py::arg("y"), 
        py::arg("x") 
    );
    m.def("fast_atan2f",(float (*)(gr_complex))&gr::fast_atan2f,
        py::arg("z") 
    );
    m.def("branchless_clip",&gr::branchless_clip,
        py::arg("x"), 
        py::arg("clip") 
    );
    m.def("clip",&gr::clip,
        py::arg("x"), 
        py::arg("clip") 
    );
    m.def("binary_slicer",&gr::binary_slicer,
        py::arg("x") 
    );
    m.def("quad_45deg_slicer",(unsigned int (*)(float, float))&gr::quad_45deg_slicer,
        py::arg("r"), 
        py::arg("i") 
    );
    m.def("quad_0deg_slicer",(unsigned int (*)(float, float))&gr::quad_0deg_slicer,
        py::arg("r"), 
        py::arg("i") 
    );
    m.def("quad_45deg_slicer",(unsigned int (*)(gr_complex))&gr::quad_45deg_slicer,
        py::arg("x") 
    );
    m.def("quad_0deg_slicer",(unsigned int (*)(gr_complex))&gr::quad_0deg_slicer,
        py::arg("x") 
    );
    m.def("branchless_binary_slicer",&gr::branchless_binary_slicer,
        py::arg("x") 
    );
    m.def("branchless_quad_0deg_slicer",(unsigned int (*)(float, float))&gr::branchless_quad_0deg_slicer,
        py::arg("r"), 
        py::arg("i") 
    );
    m.def("branchless_quad_0deg_slicer",(unsigned int (*)(gr_complex))&gr::branchless_quad_0deg_slicer,
        py::arg("x") 
    );
    m.def("branchless_quad_45deg_slicer",(unsigned int (*)(float, float))&gr::branchless_quad_45deg_slicer,
        py::arg("r"), 
        py::arg("i") 
    );
    m.def("branchless_quad_45deg_slicer",(unsigned int (*)(gr_complex))&gr::branchless_quad_45deg_slicer,
        py::arg("x") 
    );
    m.def("p2_round_down",&gr::p2_round_down,
        py::arg("x"), 
        py::arg("pow2") 
    );
    m.def("p2_round_up",&gr::p2_round_up,
        py::arg("x"), 
        py::arg("pow2") 
    );
    m.def("p2_modulo",&gr::p2_modulo,
        py::arg("x"), 
        py::arg("pow2") 
    );
    m.def("p2_modulo_neg",&gr::p2_modulo_neg,
        py::arg("x"), 
        py::arg("pow2") 
    );
} 
