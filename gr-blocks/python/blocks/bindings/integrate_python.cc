/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/blocks/integrate.h>

template<typename T>
void bind_integrate_template(py::module& m, const char *classname)
{
    using integrate      = gr::blocks::integrate<T>;

    py::class_<integrate, gr::sync_decimator, std::shared_ptr<integrate>>(m, classname)
        .def(py::init(&gr::blocks::integrate<T>::make),
            py::arg("decim"),
            py::arg("vlen") = 1
        )

        .def("to_basic_block",[](std::shared_ptr<integrate> p){
            return p->to_basic_block();
        })
        ;
} 

void bind_integrate(py::module& m)
{
    bind_integrate_template<std::int16_t>(m,"integrate_ss");
    bind_integrate_template<std::int32_t>(m,"integrate_ii");
    bind_integrate_template<float>(m,"integrate_ff");
    bind_integrate_template<gr_complex>(m,"integrate_cc");

} 

