/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/blocks/complex_to_interleaved_char.h>
// pydoc.h is automatically generated in the build directory
#include <complex_to_interleaved_char_pydoc.h>

void bind_complex_to_interleaved_char(py::module& m)
{

    using complex_to_interleaved_char = ::gr::blocks::complex_to_interleaved_char;


    py::class_<complex_to_interleaved_char,
               gr::sync_interpolator,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<complex_to_interleaved_char>>(
        m, "complex_to_interleaved_char", D(complex_to_interleaved_char))

        .def(py::init(&complex_to_interleaved_char::make),
             py::arg("vector") = false,
             py::arg("scale_factor") = 1.F,
             D(complex_to_interleaved_char, make))


        .def("set_scale_factor",
             &complex_to_interleaved_char::set_scale_factor,
             py::arg("new_value"),
             D(complex_to_interleaved_char, set_scale_factor))

        ;
}
