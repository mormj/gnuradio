

/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#ifndef INCLUDED_GR_DIGITAL_PACKET_HEADERGENERATOR_BB_PYTHON_HPP
#define INCLUDED_GR_DIGITAL_PACKET_HEADERGENERATOR_BB_PYTHON_HPP

#include <gnuradio/digital/packet_headergenerator_bb.h>

void bind_packet_headergenerator_bb(py::module& m)
{
    using packet_headergenerator_bb = gr::digital::packet_headergenerator_bb;


    py::class_<packet_headergenerator_bb,
               gr::tagged_stream_block,
               std::shared_ptr<packet_headergenerator_bb>>(m, "packet_headergenerator_bb")

        .def(py::init((std::shared_ptr<packet_headergenerator_bb>(*)(
                          const gr::digital::packet_header_default::sptr&, const std::string&)) &
                      packet_headergenerator_bb::make),
             py::arg("header_formatter"),
             py::arg("len_tag_key") = "packet_len")

        .def(py::init((std::shared_ptr<packet_headergenerator_bb>(*)(
                          long, const std::string&)) &
                      packet_headergenerator_bb::make),
             py::arg("header_len"),
             py::arg("len_tag_key") = "packet_len")

        .def("set_header_formatter",
             &packet_headergenerator_bb::set_header_formatter,
             py::arg("header_formatter"))
        .def("to_basic_block", [](std::shared_ptr<packet_headergenerator_bb> p) {
            return p->to_basic_block();
        });
}

#endif /* INCLUDED_GR_DIGITAL_PACKET_HEADERGENERATOR_BB_PYTHON_HPP */
