

/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#ifndef INCLUDED_GR_DIGITAL_OFDM_SYNC_SC_CFB_PYTHON_HPP
#define INCLUDED_GR_DIGITAL_OFDM_SYNC_SC_CFB_PYTHON_HPP

#include <gnuradio/digital/ofdm_sync_sc_cfb.h>

void bind_ofdm_sync_sc_cfb(py::module& m)
{
    using ofdm_sync_sc_cfb    = gr::digital::ofdm_sync_sc_cfb;


    py::class_<ofdm_sync_sc_cfb,gr::hier_block2,
        std::shared_ptr<ofdm_sync_sc_cfb>>(m, "ofdm_sync_sc_cfb")

        .def(py::init(&ofdm_sync_sc_cfb::make),
           py::arg("fft_len"), 
           py::arg("cp_len"), 
           py::arg("use_even_carriers") = false, 
           py::arg("threshold") = 0.90000000000000002 
        )
        

        .def("set_threshold",&ofdm_sync_sc_cfb::set_threshold,
            py::arg("threshold") 
        )
        .def("threshold",&ofdm_sync_sc_cfb::threshold)
        .def("to_basic_block",[](std::shared_ptr<ofdm_sync_sc_cfb> p){
            return p->to_basic_block();
        })
        ;


} 

#endif /* INCLUDED_GR_DIGITAL_OFDM_SYNC_SC_CFB_PYTHON_HPP */
