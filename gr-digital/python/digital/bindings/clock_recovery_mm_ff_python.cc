/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/digital/clock_recovery_mm_ff.h>

void bind_clock_recovery_mm_ff(py::module& m)
{
    using clock_recovery_mm_ff    = gr::digital::clock_recovery_mm_ff;


    py::class_<clock_recovery_mm_ff,gr::block,
        std::shared_ptr<clock_recovery_mm_ff>>(m, "clock_recovery_mm_ff")

        .def(py::init(&clock_recovery_mm_ff::make),
           py::arg("omega"), 
           py::arg("gain_omega"), 
           py::arg("mu"), 
           py::arg("gain_mu"), 
           py::arg("omega_relative_limit") 
        )
        

        .def("mu",&clock_recovery_mm_ff::mu)
        .def("omega",&clock_recovery_mm_ff::omega)
        .def("gain_mu",&clock_recovery_mm_ff::gain_mu)
        .def("gain_omega",&clock_recovery_mm_ff::gain_omega)
        .def("set_verbose",&clock_recovery_mm_ff::set_verbose,
            py::arg("verbose") 
        )
        .def("set_gain_mu",&clock_recovery_mm_ff::set_gain_mu,
            py::arg("gain_mu") 
        )
        .def("set_gain_omega",&clock_recovery_mm_ff::set_gain_omega,
            py::arg("gain_omega") 
        )
        .def("set_mu",&clock_recovery_mm_ff::set_mu,
            py::arg("mu") 
        )
        .def("set_omega",&clock_recovery_mm_ff::set_omega,
            py::arg("omega") 
        )
        .def("to_basic_block",[](std::shared_ptr<clock_recovery_mm_ff> p){
            return p->to_basic_block();
        })
        ;


} 
