/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/digital/ofdm_equalizer_base.h>

void bind_ofdm_equalizer_base(py::module& m)
{
    using ofdm_equalizer_base    = gr::digital::ofdm_equalizer_base;
    using ofdm_equalizer_1d_pilots    = gr::digital::ofdm_equalizer_1d_pilots;


    py::class_<ofdm_equalizer_base,
        std::shared_ptr<ofdm_equalizer_base>>(m, "ofdm_equalizer_base")


        .def("reset",&ofdm_equalizer_base::reset)
        .def("equalize",&ofdm_equalizer_base::equalize,
            py::arg("frame"), 
            py::arg("n_sym"), 
            py::arg("initial_taps") = std::vector<gr_complex>(), 
            py::arg("tags") = std::vector<gr::tag_t>() 
        )
        .def("get_channel_state",&ofdm_equalizer_base::get_channel_state,
            py::arg("taps") 
        )
        .def("fft_len",&ofdm_equalizer_base::fft_len)
        .def("base",&ofdm_equalizer_base::base)
        ;


    py::class_<ofdm_equalizer_1d_pilots,gr::digital::ofdm_equalizer_base,
        std::shared_ptr<ofdm_equalizer_1d_pilots>>(m, "ofdm_equalizer_1d_pilots")


        .def("reset",&ofdm_equalizer_1d_pilots::reset)
        .def("get_channel_state",&ofdm_equalizer_1d_pilots::get_channel_state,
            py::arg("taps") 
        )
        ;


} 
