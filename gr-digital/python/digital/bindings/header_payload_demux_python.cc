/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/digital/header_payload_demux.h>

void bind_header_payload_demux(py::module& m)
{
    using header_payload_demux    = gr::digital::header_payload_demux;


    py::class_<header_payload_demux,gr::block,
        std::shared_ptr<header_payload_demux>>(m, "header_payload_demux")

        .def(py::init(&header_payload_demux::make),
           py::arg("header_len"), 
           py::arg("items_per_symbol") = 1, 
           py::arg("guard_interval") = 0, 
           py::arg("length_tag_key") = "frame_len", 
           py::arg("trigger_tag_key") = "", 
           py::arg("output_symbols") = false, 
           py::arg("itemsize") = sizeof(gr_complex), 
           py::arg("timing_tag_key") = "", 
           py::arg("samp_rate") = 1., 
           py::arg("special_tags") = std::vector<std::string>(), 
           py::arg("header_padding") = 0 
        )
        

        .def("to_basic_block",[](std::shared_ptr<header_payload_demux> p){
            return p->to_basic_block();
        })
        ;


} 
