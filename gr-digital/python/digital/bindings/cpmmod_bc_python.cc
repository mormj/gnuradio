/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/digital/cpmmod_bc.h>

void bind_cpmmod_bc(py::module& m)
{
    using cpmmod_bc    = gr::digital::cpmmod_bc;


    py::class_<cpmmod_bc,gr::hier_block2,
        std::shared_ptr<cpmmod_bc>>(m, "cpmmod_bc")

        .def(py::init(&cpmmod_bc::make),
           py::arg("type"), 
           py::arg("h"), 
           py::arg("samples_per_sym"), 
           py::arg("L"), 
           py::arg("beta") = 0.29999999999999999 
        )
        

        .def_static("make_gmskmod_bc",&cpmmod_bc::make_gmskmod_bc,
            py::arg("samples_per_sym") = 2, 
            py::arg("L") = 4, 
            py::arg("beta") = 0.29999999999999999 
        )
        .def("taps",&cpmmod_bc::taps)
        .def("type",&cpmmod_bc::type)
        .def("index",&cpmmod_bc::index)
        .def("samples_per_sym",&cpmmod_bc::samples_per_sym)
        .def("beta",&cpmmod_bc::beta)
        .def("to_basic_block",[](std::shared_ptr<cpmmod_bc> p){
            return p->to_basic_block();
        })
        ;


} 
