/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/digital/ofdm_carrier_allocator_cvc.h>

void bind_ofdm_carrier_allocator_cvc(py::module& m)
{
    using ofdm_carrier_allocator_cvc    = gr::digital::ofdm_carrier_allocator_cvc;


    py::class_<ofdm_carrier_allocator_cvc,gr::tagged_stream_block,
        std::shared_ptr<ofdm_carrier_allocator_cvc>>(m, "ofdm_carrier_allocator_cvc")

        .def(py::init(&ofdm_carrier_allocator_cvc::make),
           py::arg("fft_len"), 
           py::arg("occupied_carriers"), 
           py::arg("pilot_carriers"), 
           py::arg("pilot_symbols"), 
           py::arg("sync_words"), 
           py::arg("len_tag_key") = "packet_len", 
           py::arg("output_is_shifted") = true 
        )
        

        .def("len_tag_key",&ofdm_carrier_allocator_cvc::len_tag_key)
        .def("fft_len",&ofdm_carrier_allocator_cvc::fft_len)
        .def("occupied_carriers",&ofdm_carrier_allocator_cvc::occupied_carriers)
        .def("to_basic_block",[](std::shared_ptr<ofdm_carrier_allocator_cvc> p){
            return p->to_basic_block();
        })
        ;


} 
