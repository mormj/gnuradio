/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/digital/header_buffer.h>

void bind_header_buffer(py::module& m)
{
    using header_buffer    = gr::digital::header_buffer;


    py::class_<header_buffer,
        std::shared_ptr<header_buffer>>(m, "header_buffer")

        .def(py::init<uint8_t *>(),           py::arg("buffer") = __null 
        )
        .def(py::init<gr::digital::header_buffer const &>(),           py::arg("arg0") 
        )

        .def("clear",&header_buffer::clear)
        .def("header",&header_buffer::header)
        .def("add_field8",&header_buffer::add_field8,
            py::arg("data"), 
            py::arg("len") = 8, 
            py::arg("bs") = false 
        )
        .def("add_field16",&header_buffer::add_field16,
            py::arg("data"), 
            py::arg("len") = 16, 
            py::arg("bs") = false 
        )
        .def("add_field32",&header_buffer::add_field32,
            py::arg("data"), 
            py::arg("len") = 32, 
            py::arg("bs") = false 
        )
        .def("add_field64",&header_buffer::add_field64,
            py::arg("data"), 
            py::arg("len") = 64, 
            py::arg("bs") = false 
        )
        .def("insert_bit",&header_buffer::insert_bit,
            py::arg("bit") 
        )
        .def("extract_field8",&header_buffer::extract_field8,
            py::arg("pos"), 
            py::arg("len") = 8, 
            py::arg("bs") = false 
        )
        .def("extract_field16",&header_buffer::extract_field16,
            py::arg("pos"), 
            py::arg("len") = 16, 
            py::arg("bs") = false 
        )
        .def("extract_field32",&header_buffer::extract_field32,
            py::arg("pos"), 
            py::arg("len") = 32, 
            py::arg("bs") = false 
        )
        .def("extract_field64",&header_buffer::extract_field64,
            py::arg("pos"), 
            py::arg("len") = 64, 
            py::arg("bs") = false 
        )
        ;


} 
