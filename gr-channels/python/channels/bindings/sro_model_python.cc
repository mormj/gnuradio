/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/channels/sro_model.h>

void bind_sro_model(py::module& m)
{
    using sro_model    = gr::channels::sro_model;


    py::class_<sro_model,gr::block,
        std::shared_ptr<sro_model>>(m, "sro_model")

        .def(py::init(&sro_model::make),
           py::arg("sample_rate_hz"), 
           py::arg("std_dev_hz"), 
           py::arg("max_dev_hz"), 
           py::arg("noise_seed") = 0 
        )
        

        .def("set_std_dev",&sro_model::set_std_dev,
            py::arg("_dev") 
        )
        .def("set_max_dev",&sro_model::set_max_dev,
            py::arg("_dev") 
        )
        .def("set_samp_rate",&sro_model::set_samp_rate,
            py::arg("_rate") 
        )
        .def("std_dev",&sro_model::std_dev)
        .def("max_dev",&sro_model::max_dev)
        .def("samp_rate",&sro_model::samp_rate)
        .def("to_basic_block",[](std::shared_ptr<sro_model> p){
            return p->to_basic_block();
        })
        ;


} 
