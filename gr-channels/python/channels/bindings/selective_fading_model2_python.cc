/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/pybind11.h>
#include <pybind11/complex.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/channels/selective_fading_model2.h>

void bind_selective_fading_model2(py::module& m)
{
    using selective_fading_model2    = gr::channels::selective_fading_model2;


    py::class_<selective_fading_model2,gr::sync_block,
        std::shared_ptr<selective_fading_model2>>(m, "selective_fading_model2")

        .def(py::init(&selective_fading_model2::make),
           py::arg("N"), 
           py::arg("fDTs"), 
           py::arg("LOS"), 
           py::arg("K"), 
           py::arg("seed"), 
           py::arg("delays"), 
           py::arg("delays_std"), 
           py::arg("delays_maxdev"), 
           py::arg("mags"), 
           py::arg("ntaps") 
        )
        

        .def("fDTs",&selective_fading_model2::fDTs)
        .def("K",&selective_fading_model2::K)
        .def("step",&selective_fading_model2::step)
        .def("set_fDTs",&selective_fading_model2::set_fDTs,
            py::arg("fDTs") 
        )
        .def("set_K",&selective_fading_model2::set_K,
            py::arg("K") 
        )
        .def("set_step",&selective_fading_model2::set_step,
            py::arg("step") 
        )
        .def("to_basic_block",[](std::shared_ptr<selective_fading_model2> p){
            return p->to_basic_block();
        })
        ;


} 
