{"module_name": "channels", "namespace": ["gr", "channels"], "enums": [], "variables": [], "classes": [{"name": "channel_model", "member_functions": [{"name": "make", "return_type": "gr::channels::channel_model::sptr", "has_static": "1", "arguments": [{"name": "noise_voltage", "dtype": "double", "default": "0."}, {"name": "frequency_offset", "dtype": "double", "default": "0."}, {"name": "epsilon", "dtype": "double", "default": "1."}, {"name": "taps", "dtype": "std::vector<std::complex<float>, std::allocator<std::complex<float> > > const &", "default": "std::vector<gr_complex>(1, 1)"}, {"name": "noise_seed", "dtype": "double", "default": "0"}, {"name": "block_tags", "dtype": "bool", "default": "false"}]}, {"name": "set_noise_voltage", "return_type": "void", "has_static": false, "arguments": [{"name": "noise_voltage", "dtype": "double", "default": null}]}, {"name": "set_frequency_offset", "return_type": "void", "has_static": false, "arguments": [{"name": "frequency_offset", "dtype": "double", "default": null}]}, {"name": "set_taps", "return_type": "void", "has_static": false, "arguments": [{"name": "taps", "dtype": "std::vector<std::complex<float>, std::allocator<std::complex<float> > > const &", "default": null}]}, {"name": "set_timing_offset", "return_type": "void", "has_static": false, "arguments": [{"name": "epsilon", "dtype": "double", "default": null}]}, {"name": "noise_voltage", "return_type": "double", "has_static": false, "arguments": []}, {"name": "frequency_offset", "return_type": "double", "has_static": false, "arguments": []}, {"name": "taps", "return_type": "std::vector<std::complex<float>, std::allocator<std::complex<float> > >", "has_static": false, "arguments": []}, {"name": "timing_offset", "return_type": "double", "has_static": false, "arguments": []}], "bases": ["::", "gr", "hier_block2"], "constructors": [{"name": "channel_model", "arguments": [{"name": "arg0", "dtype": "gr::channels::channel_model const &", "default": null}]}, {"name": "channel_model", "arguments": []}]}], "free_functions": []}